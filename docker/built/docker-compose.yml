name: HarmonyDB

services:
  # Database Services
  sql:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${SQL_SERVER_PASSWORD}
    ports:
      - "${SQL_SERVER_PORT}:1433"
    volumes:
      - sql-data:/var/opt/mssql

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    ports:
      - "${AZURITE_PORT}:10000"
    volumes:
      - azurite-data:/data

  # Backend Services (Core Microservices)
  index-api:
    build:
      context: .
      dockerfile: Dockerfile.functions
      args:
        RELEASE_VERSION: ${INDEX_API_VERSION}
        RELEASE_FILENAME: HarmonyDB.Index.Api.zip
        ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
    ports:
      - "${INDEX_API_PORT}:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - AzureWebJobsSecretStorageType=files
    depends_on:
      - sql
      - azurite
      - collectives-api
    volumes:
      - ./secrets:/azure-functions-host/Secrets
    env_file:
      - ./configs/index-api.env

  authorization-api:
    build:
      context: .
      dockerfile: Dockerfile.functions
      args:
        RELEASE_VERSION: ${AUTHORIZATION_API_VERSION}
        RELEASE_FILENAME: OneShelf.Authorization.Api.zip
        ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
    ports:
      - "${AUTHORIZATION_API_PORT}:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - AzureWebJobsSecretStorageType=files
    depends_on:
      - sql
      - azurite
    volumes:
      - ./secrets:/azure-functions-host/Secrets
    env_file:
      - ./configs/authorization-api.env

  illustrations-api:
    build:
      context: .
      dockerfile: Dockerfile.functions
      args:
        RELEASE_VERSION: ${ILLUSTRATIONS_API_VERSION}
        RELEASE_FILENAME: OneShelf.Illustrations.Api.zip
        ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
    ports:
      - "${ILLUSTRATIONS_API_PORT}:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - OpenAiOptions__OpenAiApiKey=${OPENAI_API_KEY}
      - AzureWebJobsSecretStorageType=files
    depends_on:
      - sql
      - azurite
    volumes:
      - ./secrets:/azure-functions-host/Secrets
    env_file:
      - ./configs/illustrations-api.env

  billing-api:
    build:
      context: .
      dockerfile: Dockerfile.functions
      args:
        RELEASE_VERSION: ${BILLING_API_VERSION}
        RELEASE_FILENAME: OneShelf.Billing.Api.zip
        ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
    ports:
      - "${BILLING_API_PORT}:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - AzureWebJobsSecretStorageType=files
    depends_on:
      - sql
      - azurite
    volumes:
      - ./secrets:/azure-functions-host/Secrets
    env_file:
      - ./configs/billing-api.env

  collectives-api:
    build:
      context: .
      dockerfile: Dockerfile.functions
      args:
        RELEASE_VERSION: ${INDEX_API_VERSION}
        RELEASE_FILENAME: OneShelf.Collectives.Api.zip
        ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
    ports:
      - "${COLLECTIVES_API_PORT}:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - AzureWebJobsSecretStorageType=files
    depends_on:
      - sql
      - azurite
      - authorization-api
    volumes:
      - ./secrets:/azure-functions-host/Secrets
    env_file:
      - ./configs/collectives-api.env

  sources-self-api:
    build:
      context: .
      dockerfile: Dockerfile.functions
      args:
        RELEASE_VERSION: ${INDEX_API_VERSION}
        RELEASE_FILENAME: OneShelf.Sources.Self.Api.zip
        ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
    ports:
      - "${SOURCES_SELF_API_PORT}:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - AzureWebJobsSecretStorageType=files
    depends_on:
      - sql
      - azurite
      - collectives-api
    volumes:
      - ./secrets:/azure-functions-host/Secrets
    env_file:
      - ./configs/sources-self-api.env

  pdfs-api:
    build:
      context: .
      dockerfile: Dockerfile.functions
      args:
        RELEASE_VERSION: ${PDFS_API_VERSION}
        RELEASE_FILENAME: OneShelf.Pdfs.Api.zip
        ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
    ports:
      - "${PDFS_API_PORT}:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - SyncFusionLicenseKey=${SYNC_FUSION_LICENSE_KEY}
      - AzureWebJobsSecretStorageType=files
    volumes:
      - ./secrets:/azure-functions-host/Secrets
    env_file:
      - ./configs/pdfs-api.env

  frontend-api:
    build:
      context: .
      dockerfile: Dockerfile.functions
      args:
        RELEASE_VERSION: ${INDEX_API_VERSION}
        RELEASE_FILENAME: OneShelf.Frontend.Api.zip
        ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
    ports:
      - "${FRONTEND_API_PORT}:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - AzureWebJobsSecretStorageType=files
    depends_on:
      - sql
      - azurite
      - index-api
      - authorization-api
      - illustrations-api
      - billing-api
    volumes:
      - ./secrets:/azure-functions-host/Secrets
    env_file:
      - ./configs/frontend-api.env

  # Frontend Services
  frontend-web:
    build:
      context: .
      dockerfile: frontend-web/Dockerfile
      args:
        RELEASE_VERSION: ${FRONTEND_WEB_VERSION}
        RELEASE_FILENAME: OneShelf.Frontend.Web.zip
        ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
    ports:
      - "${FRONTEND_WEB_PORT}:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
    depends_on:
      - index-api
      - authorization-api
      - collectives-api
      - sources-self-api
    volumes:
      - ./configs/frontend-web.json:/app/appsettings.${ASPNETCORE_ENVIRONMENT}.json

  admin-web:
    build:
      context: .
      dockerfile: Dockerfile.dotnet-service
      args:
        RELEASE_VERSION: ${ADMIN_WEB_VERSION}
        RELEASE_FILENAME: OneShelf.Admin.Web.zip
        ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
    ports:
      - "${ADMIN_WEB_PORT}:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
    depends_on:
      - illustrations-api
      - billing-api
    volumes:
      - ./configs/admin-web.json:/app/appsettings.${ASPNETCORE_ENVIRONMENT}.json

  playground-web:
    build:
      context: .
      dockerfile: Dockerfile.dotnet-service
      args:
        RELEASE_VERSION: ${PLAYGROUND_WEB_VERSION}
        RELEASE_FILENAME: HarmonyDB.Playground.Web.zip
        ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
    ports:
      - "${PLAYGROUND_WEB_PORT}:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
    depends_on:
      - index-api
      - authorization-api
    volumes:
      - ./configs/playground-web.json:/app/appsettings.${ASPNETCORE_ENVIRONMENT}.json

  telegram-runner:
    build:
      context: .
      dockerfile: Dockerfile.functions
      args:
        RELEASE_VERSION: ${INDEX_API_VERSION}
        RELEASE_FILENAME: OneShelf.Telegram.Runner.Functions.zip
        ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
    ports:
      - "${TELEGRAM_RUNNER_PORT}:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - OpenAiOptions__OpenAiApiKey=${OPENAI_API_KEY}
      - AzureWebJobsSecretStorageType=files
    depends_on:
      - sql
      - azurite
      - illustrations-api
      - pdfs-api
      - index-api
    volumes:
      - ./secrets:/azure-functions-host/Secrets
    env_file:
      - ./configs/telegram-runner.env

  telegram-polling:
    build:
      context: ../..
      dockerfile: docker/built/telegram-polling/Dockerfile
    depends_on:
      - telegram-runner
    volumes:
      - ./configs/telegram-polling.json:/app/appsettings.json

volumes:
  sql-data:
  azurite-data: 