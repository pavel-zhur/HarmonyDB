// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OneShelf.OneDragon.Database;

#nullable disable

namespace OneShelf.OneDragon.Database.Migrations
{
    [DbContext(typeof(DragonDatabase))]
    [Migration("20250628213212_Sora")]
    partial class Sora
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OneShelf.OneDragon.Database.Model.AiParameters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DalleVersion")
                        .HasColumnType("int");

                    b.Property<float?>("FrequencyPenalty")
                        .HasColumnType("real");

                    b.Property<string>("GptVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LyriaModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("PresencePenalty")
                        .HasColumnType("real");

                    b.Property<string>("SoraModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AiParameters");
                });

            modelBuilder.Entity("OneShelf.OneDragon.Database.Model.Chat", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsForum")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("OneShelf.OneDragon.Database.Model.Interaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long?>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("InteractionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Serialized")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortInfoSerialized")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("UpdateId");

                    b.HasIndex("UserId");

                    b.HasIndex("InteractionType", "UserId", "ChatId", "CreatedOn");

                    b.ToTable("Interactions");
                });

            modelBuilder.Entity("OneShelf.OneDragon.Database.Model.Limit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Images")
                        .HasColumnType("int");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<int?>("Songs")
                        .HasColumnType("int");

                    b.Property<int?>("Texts")
                        .HasColumnType("int");

                    b.Property<int?>("Videos")
                        .HasColumnType("int");

                    b.Property<long>("Window")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Limits");
                });

            modelBuilder.Entity("OneShelf.OneDragon.Database.Model.Update", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Json")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Updates");
                });

            modelBuilder.Entity("OneShelf.OneDragon.Database.Model.User", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UseLimits")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OneShelf.OneDragon.Database.Model.Interaction", b =>
                {
                    b.HasOne("OneShelf.OneDragon.Database.Model.Chat", "Chat")
                        .WithMany("Interactions")
                        .HasForeignKey("ChatId");

                    b.HasOne("OneShelf.OneDragon.Database.Model.Update", "Update")
                        .WithMany("Interactions")
                        .HasForeignKey("UpdateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OneShelf.OneDragon.Database.Model.User", "User")
                        .WithMany("Interactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("Update");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OneShelf.OneDragon.Database.Model.Chat", b =>
                {
                    b.Navigation("Interactions");
                });

            modelBuilder.Entity("OneShelf.OneDragon.Database.Model.Update", b =>
                {
                    b.Navigation("Interactions");
                });

            modelBuilder.Entity("OneShelf.OneDragon.Database.Model.User", b =>
                {
                    b.Navigation("Interactions");
                });
#pragma warning restore 612, 618
        }
    }
}
