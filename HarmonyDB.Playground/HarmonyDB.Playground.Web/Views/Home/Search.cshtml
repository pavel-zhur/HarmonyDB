@using System.Text.Json
@using HarmonyDB.Index.Api.Model.VExternal1
@using OneShelf.Common.Api.Client
@model SearchModel

@{
    ViewBag.Title = "Progressions Search";
    Layout = "_Layout";

    SearchResponse? response = ViewBag.Response;
}

<div>
    <h3 class="d-inline-block">Search songs by chords sequence</h3>
    @Html.ActionLink("\ud83d\udd17Permalink", "Search", "Home", Model with
    {
        JustForm = true,
}, new { target = "_blank" })
</div>

@using (Html.BeginForm("Search", "Home", Model, FormMethod.Get))
{
    <p>
        Progression: @Html.TextBoxFor(x => x.Query)
    </p>
    <p>
        Ordering:
        <label>
            @Html.RadioButtonFor(x => x.Ordering, SearchRequestOrdering.ByCoverage)
            By Coverage
        </label>
        
        <label>
            @Html.RadioButtonFor(x => x.Ordering, SearchRequestOrdering.ByRating)
            By Rating
        </label>
    </p>
    <p>
        Min coverage (real, 0&ndash;1): @Html.TextBoxFor(x => x.MinCoverage)
    </p>
    <p>
        Min rating (whole, 0&ndash;100): @Html.TextBoxFor(x => x.MinRating)
    </p>
    <p>
        Songs Per Page: @Html.TextBoxFor(x => x.SongsPerPage)
    </p>
    <p>
        <label>
            @Html.CheckBoxFor(x => x.IncludeTrace)
            Include the Index API trace for developers
        </label>
    </p>
    <input type="submit" value="Search" onclick="this.form.submit(); this.disabled=true; this.value='Querying (takes 5–60 seconds)…'; " />
}

@if (response != null)
{
    <div class="mt-4">
        <h3 class="d-inline-block">Results</h3>
        @Html.ActionLink("\ud83d\udd17Permalink", "Search", "Home", Model, new { target = "_blank" })
    </div>

    @await Html.PartialAsync("Paging", Model)

    <table>
        <thead>
        <tr class="fw-bold">
            <td>Song</td>
            <td class="ps-2">Source</td>
            <td class="ps-2">Rating</td>
            <td class="ps-2">Coverage</td>
        </tr>
        </thead>
        @foreach (var song in response.Songs)
        {
            <tr>
                <td class="pt-1">
                    @string.Join(", ", song.Header.Artists ?? Enumerable.Empty<string>()) – @Html.ActionLink(song.Header.Title, "Song", "Home", new SongModel { ExternalId = song.Header.ExternalId, Highlight = Model.Query })
                </td>
                <td class="pt-1 ps-2">@song.Header.Source</td>
                <td class="pt-1 ps-2">@((int)(song.Header.Rating ?? 0))%</td>
                <td class="pt-1 ps-2">@((int)(song.Coverage * 100))%</td>
            </tr>
        }
    </table>

    @await Html.PartialAsync("Paging", Model)
}

@await Html.PartialAsync("Trace")