@using System.Text.Json
@using HarmonyDB.Index.Api.Model.VExternal1
@using OneShelf.Common.Api.Client
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer ViewLocalizer
@model SongsByChordsModel

@{
    SongsByChordsResponse? response = ViewBag.Response;

    ViewBag.Title = $"{(response == null ? null : $"{response.Total} {ViewLocalizer["found"].Value} - ")}{ViewLocalizer["Songs By Chords"].Value}";
    Layout = "_Layout";
}

<div>
    <h3 class="d-inline-block">@ViewLocalizer["Search songs by chords sequence"]</h3>
    @Html.ActionLink($"\ud83d\udd17{ViewLocalizer["Permalink"].Value}", "SongsByChords", "Home", Model with
    {
        JustForm = true,
    }, new { target = "_blank" })
</div>

@using (Html.BeginForm("SongsByChords", "Home", Model, FormMethod.Get))
{
    <p>
        @ViewLocalizer["Progression"]: @Html.TextBoxFor(x => x.Query, htmlAttributes: new { id = "search-by-chords-query" })
    </p>
    <p>
        @ViewLocalizer["Ordering"]:
        <label>
            @Html.RadioButtonFor(x => x.Ordering, SongsByChordsRequestOrdering.ByCoverage)
            @ViewLocalizer["By Coverage"]
        </label>
        
        <label>
            @Html.RadioButtonFor(x => x.Ordering, SongsByChordsRequestOrdering.ByRating)
            @ViewLocalizer["By Rating"]
        </label>
    </p>
    <p>
        @ViewLocalizer["Min coverage (real, 0–1)"]: @Html.TextBoxFor(x => x.MinCoverage)
    </p>
    <p>
        @ViewLocalizer["Min rating (whole, 0–100)"]: @Html.TextBoxFor(x => x.MinRating)
    </p>
    <p>
        @ViewLocalizer["Songs Per Page"]: @Html.TextBoxFor(x => x.SongsPerPage)
    </p>
    <p>
        <label>
            @Html.CheckBoxFor(x => x.IncludeTrace)
            @ViewLocalizer["Include the Index API trace for developers"]
        </label>
    </p>
    <input type="submit" value="@ViewLocalizer["Search"]" onclick="this.form.submit(); this.disabled=true; this.value='@ViewLocalizer["Querying (takes 5–60 seconds)…"]'; " />
}

@if (response != null)
{
    <div class="mt-4">
        <h3 class="d-inline-block">@ViewLocalizer["Results"]</h3>
        @Html.ActionLink($"\ud83d\udd17{ViewLocalizer["Permalink"].Value}", "SongsByChords", "Home", Model, new { target = "_blank" })
    </div>

    @await Html.PartialAsync("Paging", Model)

    <table>
        <thead>
            <tr class="fw-bold">
                <td>@ViewLocalizer["Song"]</td>
                <td class="ps-2">@ViewLocalizer["Source"]</td>
                <td class="ps-2">@ViewLocalizer["Tonality"]</td>
                <td class="ps-2">@ViewLocalizer["Rating"]</td>
                <td class="ps-2">@ViewLocalizer["Coverage"]</td>
            </tr>
        </thead>
        @foreach (var song in response.Songs)
        {
            <tr>
                <td class="pt-1">
                    @string.Join(", ", song.Header.Artists ?? Enumerable.Empty<string>()) – @Html.ActionLink(song.Header.Title, "Song", "Home", new SongModel { ExternalId = song.Header.ExternalId, Highlight = Model.Query })
                </td>
                <td class="pt-1 ps-2">@song.Header.Source</td>
                <td class="pt-1 ps-2">@song.Header.BestTonality?.Tonality</td>
                <td class="pt-1 ps-2">@((int)(song.Header.Rating ?? 0))%</td>
                <td class="pt-1 ps-2">@song.Coverage.ToString("P0")</td>
            </tr>
        }
    </table>

    @await Html.PartialAsync("Paging", Model)
}

@await Html.PartialAsync("Trace")