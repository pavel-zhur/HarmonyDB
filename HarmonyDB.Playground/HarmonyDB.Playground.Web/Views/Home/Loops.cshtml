@using HarmonyDB.Index.Api.Model.VExternal1
@model LoopsModel

@{
    LoopsResponse? response = ViewBag.Response;

    ViewBag.Title = $"{(response == null ? null : $"{response.Total} found - ")}Popular Loops, Harmony DB";
    Layout = "_Layout";
}

<div>
    <h3 class="d-inline-block">See the most popular chord progressions</h3>
    @Html.ActionLink("\ud83d\udd17Permalink", "Loops", "Home", Model with
    {
        JustForm = true,
}, new { target = "_blank" })
</div>

@using (Html.BeginForm("Loops", "Home", Model, FormMethod.Get))
{
    <p>
        Ordering:
        @Html.DropDownListFor(x => x.Ordering, Enum.GetValues<LoopsRequestOrdering>().Select(x => new SelectListItem(x.ToString(), x.ToString())))
    </p>
    <p>
        Min length: @Html.TextBoxFor(x => x.MinLength)
    </p>
    <p>
        Max length: @Html.TextBoxFor(x => x.MaxLength)
    </p>
    <p>
        Min total songs: @Html.TextBoxFor(x => x.MinTotalSongs)
    </p>
    <p>
        Min total occurrences: @Html.TextBoxFor(x => x.MinTotalOccurrences)
    </p>
    <p>
        Min total successions: @Html.TextBoxFor(x => x.MinTotalSuccessions)
    </p>
    <p>
        Loops Per Page: @Html.TextBoxFor(x => x.LoopsPerPage)
    </p>
    <p>
        <label>
            @Html.CheckBoxFor(x => x.IncludeTrace)
            Include the Index API trace for developers
        </label>
    </p>
    <input type="submit" value="List" onclick="this.form.submit(); this.disabled=true; this.value='Querying (takes 5–60 seconds)…'; " />
}

@if (response != null)
{
    <div class="mt-4">
        <h3 class="d-inline-block">Results</h3>
        @Html.ActionLink("\ud83d\udd17Permalink", "Loops", "Home", Model, new { target = "_blank" })
    </div>

    @await Html.PartialAsync("Paging", Model)

    <table>
        <thead>
        <tr>
            <td>Progression</td>
            <td>Length</td>
            <td>Total Songs</td>
            <td>Total Occurrences</td>
            <td>Total Successions</td>
        </tr>
        </thead>
        @foreach (var loop in response.Loops)
        {
            <tr>
                <td>@Html.ActionLink(loop.Progression, "SongsByChords", new SongsByChordsModel { Query = loop.Progression, JustForm = true })</td>
                <td>@loop.Length</td>
                <td>@loop.TotalSongs.ToString("N0")</td>
                <td>@loop.TotalOccurrences.ToString("N0")</td>
                <td>@loop.TotalSuccessions.ToString("N0")</td>
            </tr>
        }
    </table>

    @await Html.PartialAsync("Paging", Model)
}

@await Html.PartialAsync("Trace")