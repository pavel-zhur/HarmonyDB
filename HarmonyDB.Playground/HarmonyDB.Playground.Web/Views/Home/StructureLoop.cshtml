@using HarmonyDB.Index.Analysis.Tools
@using HarmonyDB.Index.Api.Model.VExternal1
@using Microsoft.AspNetCore.Mvc.Localization
@using OneShelf.Common
@inject IViewLocalizer ViewLocalizer
@model StructureLoopModel

@{
    StructureLoopResponse? response = ViewBag.Response;

    ViewBag.Title = response == null ? ViewLocalizer["Structure Loop"].Value : $"{response.Loop.Normalized} - {ViewLocalizer["Structure Loop"].Value}";
    Layout = "_Layout";
}

<div>
    <h3 class="d-inline-block">@ViewLocalizer["Structure Loop Details"]</h3>
    @Html.ActionLink($"\ud83d\udd17{ViewLocalizer["Permalink"].Value}", "StructureLoop", "Home", Model, new { target = "_blank" })
</div>

<ul>
    <li>
        @if (Model.IncludeTrace)
        {
            @Html.ActionLink(ViewLocalizer["Exclude the Index API trace for developers"].Value, "StructureLoop", Model with { IncludeTrace = false })
        }
        else
        {
            @Html.ActionLink(ViewLocalizer["Include the Index API trace for developers"].Value, "StructureLoop", Model with { IncludeTrace = true })
        }
    </li>
</ul>

@if (response != null)
{
    var loop = response.Loop;
    var predicted = loop.Probabilities.GetPredictedTonality();
    var secondPredicted = loop.Probabilities.GetSecondPredictedTonality(out var secondConfidence);
    var parallelToPredicted = predicted.GetParallelScale();

    <div class="mt-4">
        <h3 class="d-inline-block">@ViewLocalizer["Loop Information"]</h3>
    </div>

    <table class="table table-bordered table-sm w-auto">
        <tbody>
            <tr>
                <td><b>@ViewLocalizer["Progression"]</b></td>
                <td>@loop.Normalized.GetTitle(loopify: false)</td>
            </tr>
            <tr>
                <td><b>@ViewLocalizer["Length"]</b></td>
                <td>@loop.Length</td>
            </tr>
            <tr>
                <td><b>@ViewLocalizer["Total Songs"]</b></td>
                <td>@loop.TotalSongs.ToString("N0")</td>
            </tr>
            <tr>
                <td><b>@ViewLocalizer["Total Occurrences"]</b></td>
                <td>@loop.TotalOccurrences.ToString("N0")</td>
            </tr>
            <tr>
                <td><b>@ViewLocalizer["Total Successions"]</b></td>
                <td>@loop.TotalSuccessions.ToString("N0")</td>
            </tr>
            <tr>
                <td><b>@ViewLocalizer["Detected Tonality"]</b></td>
                <td>
                    <span>@loop.Probabilities.TonalityConfidence().ToString("P0")</span>
                    <b>@predicted.ToLoopTonalityTitle()</b>
                </td>
            </tr>
            <tr>
                <td><b>@ViewLocalizer["Second Detected Tonality"]</b></td>
                <td>
                    <span>@secondConfidence.ToString("P0")</span>
                    <b>@secondPredicted.ToLoopTonalityTitle()</b>
                </td>
            </tr>
            <tr>
                <td><b>@ViewLocalizer["Parallel to Detected Tonality (if not second)"]</b></td>
                <td>
                    @if (secondPredicted != parallelToPredicted)
                    {
                        <span>@loop.Probabilities[parallelToPredicted.ToIndex()].ToString("P0")</span>
                        <b>@parallelToPredicted.ToLoopTonalityTitle()</b>
                    }
                </td>
            </tr>
            <tr>
                <td><b>@ViewLocalizer["Tonic Confidence"]</b></td>
                <td>@loop.Probabilities.TonicConfidence().ToString("P0")</td>
            </tr>
            <tr>
                <td><b>@ViewLocalizer["Tonic Score"]</b></td>
                <td>@loop.TonicScore.ToString("P0")</td>
            </tr>
            <tr>
                <td><b>@ViewLocalizer["Scale Score"]</b></td>
                <td>@loop.ScaleScore.ToString("P0")</td>
            </tr>
        </tbody>
    </table>

    <div class="mt-4">
        <h3 class="d-inline-block">@ViewLocalizer["Link Statistics"]</h3>
    </div>

    <table class="table table-bordered table-sm">
        <thead>
            <tr class="fw-bold">
                <td>@ViewLocalizer["Known Tonality Index"]</td>
                <td>@ViewLocalizer["Predicted Tonality Index"]</td>
                <td>@ViewLocalizer["Normalization Root"]</td>
                <td>@ViewLocalizer["Count"]</td>
                <td>@ViewLocalizer["Total Weight"]</td>
                <td>@ViewLocalizer["Occurrences"]</td>
                <td>@ViewLocalizer["Successions"]</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var link in response.LinkStatistics)
            {
                <tr>
                    <td>@link.KnownTonalityIndex</td>
                    <td>@link.PredictedTonalityIndex</td>
                    <td>@link.NormalizationRoot</td>
                    <td>@link.Count</td>
                    <td>@link.TotalWeight</td>
                    <td>@link.Occurrences</td>
                    <td>@link.Successions</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>@ViewLocalizer["No data available."]</p>
}

@if (Model.IncludeTrace)
{
    @await Html.PartialAsync("Trace")
}
